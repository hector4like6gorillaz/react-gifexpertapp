{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrif.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","Input","setInput","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","obtenergif","category","a","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","images","downsized_medium","GifGrif","loading","objeto","setObjeto","useEffect","then","imgs","useFetchGifs","imagenes","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAElBC,mBAAS,IAFS,mBAErCC,EAFqC,KAE9BC,EAF8B,KAgB5C,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACCJ,EAAMK,OAAOC,OAAO,IACvBR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAeO,OACjCN,EAAS,MAIT,SAEI,uBACAO,KAAK,OACLC,MAAST,EACTU,SAlBkB,SAACP,GAEvBF,EAASE,EAAEQ,OAAOF,a,QCNbG,EAAc,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAGjC,OACI,sBAAKC,UAAY,wCAAjB,UACI,qBAAKC,IAAMF,EAAKG,IAAOJ,IACvB,4BAAIA,Q,uBCPHK,EAAU,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEhBN,EAFgB,iDAEgCO,UAAWF,GAF3C,8DAGEG,MAAMR,GAHR,cAGhBS,EAHgB,gBAIDA,EAAUC,OAJT,uBAIfC,EAJe,EAIfA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAEzB,MAAM,CACFC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAXpB,kBAefY,GAfe,4CAAH,sDCIVM,EAAU,SAAC,GAAiB,IAAhBb,EAAe,EAAfA,SAAe,ECFZ,SAACA,GAAc,IAAD,EACVpB,mBAAS,CACjC0B,KAAM,GACNQ,SAAS,IAHyB,mBAC/BC,EAD+B,KACvBC,EADuB,KAyBtC,OAnBAC,qBAAU,WACNlB,EAAYC,GACXkB,MAAK,SAAAC,GAIEH,EAAU,CACNV,KAAMa,EACNL,SAAS,SAOtB,CAACd,IAIGe,EDrB6BK,CAAapB,GAAnCqB,EAFsB,EAE5Bf,KAAgBQ,EAFY,EAEZA,QAWxB,OACI,qCACA,6BAAMd,IACLc,GAAW,mBAAGlB,UAAW,mCAAd,yBAEZ,qBAAKA,UAAY,WAAjB,SAGYyB,EAASb,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEtB1BY,EAAe,WAAM,IAAD,EAEO1C,mBAAS,CAAC,gBAFjB,mBAEtB2C,EAFsB,KAEV5C,EAFU,KAMzB,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEI4C,EAAWf,KAAK,SAAAR,GAAQ,OACxB,cAAC,EAAD,CAEAA,SAAWA,GADNA,Y,MClBrBwB,IAASC,OACH,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0985abd0.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [Input, setInput] = useState(\"\");\r\n    \r\n    const HandleInputChange = (e) =>{\r\n        //console.log()\r\n        setInput(e.target.value);\r\n    }\r\n    \r\n    const HandleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(Input.trim().length>2){\r\n        setCategories(cats => [ Input,...cats ]);\r\n        setInput(\"\");\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit = {HandleSubmit}>\r\n        \r\n            <input \r\n            type=\"text\"\r\n            value = {Input}\r\n            onChange = {HandleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n    \r\n    //console.log(id,title, url);\r\n    return (\r\n        <div className = \"card animate__animated animate__flash\">\r\n            <img src ={url} alt = {title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const obtenergif = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category)}&limit=5&api_key=wdLS1xQOMQv6XViyNNPDGHyBFTNColx6`;\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs = data.map(img => {\r\n\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    //setImages(gifs);\r\n    return gifs;\r\n    \r\n}","\r\nimport React  from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\r\n\r\nexport const GifGrif = ({category }) => {\r\n\r\n    const { data: imagenes, loading } = useFetchGifs(category);\r\n    /*const [images,setImages] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        obtenergif( category )\r\n        .then( setImages );\r\n    },[ category ])\r\n*/\r\n    \r\n    \r\n    //\r\n    return (\r\n        <>\r\n        <h2>{ category }</h2>\r\n        {loading && <p className= \"animate__animated animate__jello\">Cargando...</p>}\r\n        {\r\n        <div className = \"cardgrid\">            \r\n            \r\n                {\r\n                    imagenes.map( img => (                        \r\n                        <GifGridItem \r\n                            key = {img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            \r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import {useState,useEffect} from \"react\";\r\nimport {obtenergif} from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [objeto, setObjeto] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        obtenergif( category )\r\n        .then(imgs =>{\r\n\r\n            \r\n            \r\n                setObjeto({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            \r\n\r\n            \r\n        })\r\n    }, [category])\r\n\r\n    \r\n\r\n    return objeto; //{data: [], loading: true};\r\n}\r\n\r\n\r\n","import React,{useState} from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrif } from \"./components/GifGrif\";\r\n\r\n//import PropTypes from \"prop-types\";\r\n\r\n\r\nexport const GifExpertApp = ()=> {   \r\n    \r\n    const [categories, setCategories] = useState([\"bob esponja\"]);    \r\n    //const handleAdd = () => setcategories([...categories, `hunter hunter `]);        \r\n    //const categories = [\"one punch\", \"samurai x\", \"Dragon ball\"];\r\n    //\r\n        return (\r\n            <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>            \r\n            <hr/>\r\n            \r\n            \r\n            <ol>\r\n            {\r\n                categories.map( category => (\r\n                <GifGrif \r\n                key={category}  \r\n                category ={category}\r\n                />\r\n                ))\r\n            }\r\n            </ol>\r\n            </>\r\n        )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from \"./GifExpertApp\";\nimport './index.css';\n\n\nReactDOM.render(\n      <GifExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}